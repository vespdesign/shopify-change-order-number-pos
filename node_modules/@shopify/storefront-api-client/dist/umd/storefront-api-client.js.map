{"version":3,"file":"storefront-api-client.js","sources":["../../../graphql-client/dist/graphql-client/constants.mjs","../../../graphql-client/dist/graphql-client/utilities.mjs","../../../graphql-client/dist/graphql-client/http-fetch.mjs","../../../graphql-client/dist/graphql-client/graphql-client.mjs","../../../graphql-client/dist/api-client-utilities/validations.mjs","../../../graphql-client/dist/api-client-utilities/api-versions.mjs","../../../graphql-client/dist/api-client-utilities/utilities.mjs","../../../src/constants.ts","../../../src/validations.ts","../../../src/storefront-api-client.ts"],"sourcesContent":["const CLIENT = 'GraphQL Client';\nconst MIN_RETRIES = 0;\nconst MAX_RETRIES = 3;\nconst GQL_API_ERROR = \"An error occurred while fetching from the API. Review 'graphQLErrors' for details.\";\nconst UNEXPECTED_CONTENT_TYPE_ERROR = 'Response returned unexpected Content-Type:';\nconst NO_DATA_OR_ERRORS_ERROR = 'An unknown error has occurred. The API did not return a data object or any errors in its response.';\nconst CONTENT_TYPES = {\n    json: 'application/json',\n    multipart: 'multipart/mixed',\n};\nconst SDK_VARIANT_HEADER = 'X-SDK-Variant';\nconst SDK_VERSION_HEADER = 'X-SDK-Version';\nconst DEFAULT_SDK_VARIANT = 'shopify-graphql-client';\n// This is value is replaced with package.json version during rollup build process\nconst DEFAULT_CLIENT_VERSION = '1.0.0';\nconst RETRY_WAIT_TIME = 1000;\nconst RETRIABLE_STATUS_CODES = [429, 503];\nconst DEFER_OPERATION_REGEX = /@(defer)\\b/i;\nconst NEWLINE_SEPARATOR = '\\r\\n';\nconst BOUNDARY_HEADER_REGEX = /boundary=\"?([^=\";]+)\"?/i;\nconst HEADER_SEPARATOR = NEWLINE_SEPARATOR + NEWLINE_SEPARATOR;\n\nexport { BOUNDARY_HEADER_REGEX, CLIENT, CONTENT_TYPES, DEFAULT_CLIENT_VERSION, DEFAULT_SDK_VARIANT, DEFER_OPERATION_REGEX, GQL_API_ERROR, HEADER_SEPARATOR, MAX_RETRIES, MIN_RETRIES, NEWLINE_SEPARATOR, NO_DATA_OR_ERRORS_ERROR, RETRIABLE_STATUS_CODES, RETRY_WAIT_TIME, SDK_VARIANT_HEADER, SDK_VERSION_HEADER, UNEXPECTED_CONTENT_TYPE_ERROR };\n//# sourceMappingURL=constants.mjs.map\n","import { MIN_RETRIES, MAX_RETRIES, CLIENT } from './constants.mjs';\n\nfunction formatErrorMessage(message, client = CLIENT) {\n    return message.startsWith(`${client}`) ? message : `${client}: ${message}`;\n}\nfunction getErrorMessage(error) {\n    return error instanceof Error ? error.message : JSON.stringify(error);\n}\nfunction getErrorCause(error) {\n    return error instanceof Error && error.cause ? error.cause : undefined;\n}\nfunction combineErrors(dataArray) {\n    return dataArray.flatMap(({ errors }) => {\n        return errors ?? [];\n    });\n}\nfunction validateRetries({ client, retries, }) {\n    if (retries !== undefined &&\n        (typeof retries !== 'number' ||\n            retries < MIN_RETRIES ||\n            retries > MAX_RETRIES)) {\n        throw new Error(`${client}: The provided \"retries\" value (${retries}) is invalid - it cannot be less than ${MIN_RETRIES} or greater than ${MAX_RETRIES}`);\n    }\n}\nfunction getKeyValueIfValid(key, value) {\n    return value &&\n        (typeof value !== 'object' ||\n            Array.isArray(value) ||\n            (typeof value === 'object' && Object.keys(value).length > 0))\n        ? { [key]: value }\n        : {};\n}\nfunction buildDataObjectByPath(path, data) {\n    if (path.length === 0) {\n        return data;\n    }\n    const key = path.pop();\n    const newData = {\n        [key]: data,\n    };\n    if (path.length === 0) {\n        return newData;\n    }\n    return buildDataObjectByPath(path, newData);\n}\nfunction combineObjects(baseObject, newObject) {\n    return Object.keys(newObject || {}).reduce((acc, key) => {\n        if ((typeof newObject[key] === 'object' || Array.isArray(newObject[key])) &&\n            baseObject[key]) {\n            acc[key] = combineObjects(baseObject[key], newObject[key]);\n            return acc;\n        }\n        acc[key] = newObject[key];\n        return acc;\n    }, Array.isArray(baseObject) ? [...baseObject] : { ...baseObject });\n}\nfunction buildCombinedDataObject([initialDatum, ...remainingData]) {\n    return remainingData.reduce(combineObjects, { ...initialDatum });\n}\n\nexport { buildCombinedDataObject, buildDataObjectByPath, combineErrors, formatErrorMessage, getErrorCause, getErrorMessage, getKeyValueIfValid, validateRetries };\n//# sourceMappingURL=utilities.mjs.map\n","import { CLIENT, RETRY_WAIT_TIME, RETRIABLE_STATUS_CODES } from './constants.mjs';\nimport { formatErrorMessage, getErrorMessage } from './utilities.mjs';\n\nfunction generateHttpFetch({ clientLogger, customFetchApi = fetch, client = CLIENT, defaultRetryWaitTime = RETRY_WAIT_TIME, retriableCodes = RETRIABLE_STATUS_CODES, }) {\n    const httpFetch = async (requestParams, count, maxRetries) => {\n        const nextCount = count + 1;\n        const maxTries = maxRetries + 1;\n        let response;\n        try {\n            response = await customFetchApi(...requestParams);\n            clientLogger({\n                type: 'HTTP-Response',\n                content: {\n                    requestParams,\n                    response,\n                },\n            });\n            if (!response.ok &&\n                retriableCodes.includes(response.status) &&\n                nextCount <= maxTries) {\n                throw new Error();\n            }\n            return response;\n        }\n        catch (error) {\n            if (nextCount <= maxTries) {\n                const retryAfter = response?.headers.get('Retry-After');\n                await sleep(retryAfter ? parseInt(retryAfter, 10) : defaultRetryWaitTime);\n                clientLogger({\n                    type: 'HTTP-Retry',\n                    content: {\n                        requestParams,\n                        lastResponse: response,\n                        retryAttempt: count,\n                        maxRetries,\n                    },\n                });\n                return httpFetch(requestParams, nextCount, maxRetries);\n            }\n            throw new Error(formatErrorMessage(`${maxRetries > 0\n                ? `Attempted maximum number of ${maxRetries} network retries. Last message - `\n                : ''}${getErrorMessage(error)}`, client));\n        }\n    };\n    return httpFetch;\n}\nasync function sleep(waitTime) {\n    return new Promise((resolve) => setTimeout(resolve, waitTime));\n}\n\nexport { generateHttpFetch };\n//# sourceMappingURL=http-fetch.mjs.map\n","import { generateHttpFetch } from './http-fetch.mjs';\nimport { CLIENT, SDK_VARIANT_HEADER, SDK_VERSION_HEADER, DEFAULT_SDK_VARIANT, DEFAULT_CLIENT_VERSION, DEFER_OPERATION_REGEX, CONTENT_TYPES, UNEXPECTED_CONTENT_TYPE_ERROR, GQL_API_ERROR, NO_DATA_OR_ERRORS_ERROR, BOUNDARY_HEADER_REGEX, RETRY_WAIT_TIME, HEADER_SEPARATOR } from './constants.mjs';\nimport { validateRetries, formatErrorMessage, getErrorMessage, getErrorCause, getKeyValueIfValid, combineErrors, buildCombinedDataObject, buildDataObjectByPath } from './utilities.mjs';\n\nfunction createGraphQLClient({ headers, url, customFetchApi = fetch, retries = 0, logger, }) {\n    validateRetries({ client: CLIENT, retries });\n    const config = {\n        headers,\n        url,\n        retries,\n    };\n    const clientLogger = generateClientLogger(logger);\n    const httpFetch = generateHttpFetch({\n        customFetchApi,\n        clientLogger,\n        defaultRetryWaitTime: RETRY_WAIT_TIME,\n    });\n    const fetch = generateFetch(httpFetch, config);\n    const request = generateRequest(fetch);\n    const requestStream = generateRequestStream(fetch);\n    return {\n        config,\n        fetch,\n        request,\n        requestStream,\n    };\n}\nfunction generateClientLogger(logger) {\n    return (logContent) => {\n        if (logger) {\n            logger(logContent);\n        }\n    };\n}\nasync function processJSONResponse(response) {\n    const { errors, data, extensions } = await response.json();\n    return {\n        ...getKeyValueIfValid('data', data),\n        ...getKeyValueIfValid('extensions', extensions),\n        ...(errors || !data\n            ? {\n                errors: {\n                    networkStatusCode: response.status,\n                    message: formatErrorMessage(errors ? GQL_API_ERROR : NO_DATA_OR_ERRORS_ERROR),\n                    ...getKeyValueIfValid('graphQLErrors', errors),\n                    response,\n                },\n            }\n            : {}),\n    };\n}\nfunction generateFetch(httpFetch, { url, headers, retries }) {\n    return async (operation, options = {}) => {\n        const { variables, headers: overrideHeaders, url: overrideUrl, retries: overrideRetries, } = options;\n        const body = JSON.stringify({\n            query: operation,\n            variables,\n        });\n        validateRetries({ client: CLIENT, retries: overrideRetries });\n        const flatHeaders = Object.entries({\n            ...headers,\n            ...overrideHeaders,\n        }).reduce((headers, [key, value]) => {\n            headers[key] = Array.isArray(value) ? value.join(', ') : value.toString();\n            return headers;\n        }, {});\n        if (!flatHeaders[SDK_VARIANT_HEADER] && !flatHeaders[SDK_VERSION_HEADER]) {\n            flatHeaders[SDK_VARIANT_HEADER] = DEFAULT_SDK_VARIANT;\n            flatHeaders[SDK_VERSION_HEADER] = DEFAULT_CLIENT_VERSION;\n        }\n        const fetchParams = [\n            overrideUrl ?? url,\n            {\n                method: 'POST',\n                headers: flatHeaders,\n                body,\n            },\n        ];\n        return httpFetch(fetchParams, 1, overrideRetries ?? retries);\n    };\n}\nfunction generateRequest(fetch) {\n    return async (...props) => {\n        if (DEFER_OPERATION_REGEX.test(props[0])) {\n            throw new Error(formatErrorMessage('This operation will result in a streamable response - use requestStream() instead.'));\n        }\n        try {\n            const response = await fetch(...props);\n            const { status, statusText } = response;\n            const contentType = response.headers.get('content-type') || '';\n            if (!response.ok) {\n                return {\n                    errors: {\n                        networkStatusCode: status,\n                        message: formatErrorMessage(statusText),\n                        response,\n                    },\n                };\n            }\n            if (!contentType.includes(CONTENT_TYPES.json)) {\n                return {\n                    errors: {\n                        networkStatusCode: status,\n                        message: formatErrorMessage(`${UNEXPECTED_CONTENT_TYPE_ERROR} ${contentType}`),\n                        response,\n                    },\n                };\n            }\n            return processJSONResponse(response);\n        }\n        catch (error) {\n            return {\n                errors: {\n                    message: getErrorMessage(error),\n                },\n            };\n        }\n    };\n}\nasync function* getStreamBodyIterator(response) {\n    const decoder = new TextDecoder();\n    // Response body is an async iterator\n    if (response.body[Symbol.asyncIterator]) {\n        for await (const chunk of response.body) {\n            yield decoder.decode(chunk);\n        }\n    }\n    else {\n        const reader = response.body.getReader();\n        let readResult;\n        try {\n            while (!(readResult = await reader.read()).done) {\n                yield decoder.decode(readResult.value);\n            }\n        }\n        finally {\n            reader.cancel();\n        }\n    }\n}\nfunction readStreamChunk(streamBodyIterator, boundary) {\n    return {\n        async *[Symbol.asyncIterator]() {\n            try {\n                let buffer = '';\n                for await (const textChunk of streamBodyIterator) {\n                    buffer += textChunk;\n                    if (buffer.indexOf(boundary) > -1) {\n                        const lastBoundaryIndex = buffer.lastIndexOf(boundary);\n                        const fullResponses = buffer.slice(0, lastBoundaryIndex);\n                        const chunkBodies = fullResponses\n                            .split(boundary)\n                            .filter((chunk) => chunk.trim().length > 0)\n                            .map((chunk) => {\n                            const body = chunk\n                                .slice(chunk.indexOf(HEADER_SEPARATOR) + HEADER_SEPARATOR.length)\n                                .trim();\n                            return body;\n                        });\n                        if (chunkBodies.length > 0) {\n                            yield chunkBodies;\n                        }\n                        buffer = buffer.slice(lastBoundaryIndex + boundary.length);\n                        if (buffer.trim() === `--`) {\n                            buffer = '';\n                        }\n                    }\n                }\n            }\n            catch (error) {\n                throw new Error(`Error occured while processing stream payload - ${getErrorMessage(error)}`);\n            }\n        },\n    };\n}\nfunction createJsonResponseAsyncIterator(response) {\n    return {\n        async *[Symbol.asyncIterator]() {\n            const processedResponse = await processJSONResponse(response);\n            yield {\n                ...processedResponse,\n                hasNext: false,\n            };\n        },\n    };\n}\nfunction getResponseDataFromChunkBodies(chunkBodies) {\n    return chunkBodies\n        .map((value) => {\n        try {\n            return JSON.parse(value);\n        }\n        catch (error) {\n            throw new Error(`Error in parsing multipart response - ${getErrorMessage(error)}`);\n        }\n    })\n        .map((payload) => {\n        const { data, incremental, hasNext, extensions, errors } = payload;\n        // initial data chunk\n        if (!incremental) {\n            return {\n                data: data || {},\n                ...getKeyValueIfValid('errors', errors),\n                ...getKeyValueIfValid('extensions', extensions),\n                hasNext,\n            };\n        }\n        // subsequent data chunks\n        const incrementalArray = incremental.map(({ data, path, errors }) => {\n            return {\n                data: data && path ? buildDataObjectByPath(path, data) : {},\n                ...getKeyValueIfValid('errors', errors),\n            };\n        });\n        return {\n            data: incrementalArray.length === 1\n                ? incrementalArray[0].data\n                : buildCombinedDataObject([\n                    ...incrementalArray.map(({ data }) => data),\n                ]),\n            ...getKeyValueIfValid('errors', combineErrors(incrementalArray)),\n            hasNext,\n        };\n    });\n}\nfunction validateResponseData(responseErrors, combinedData) {\n    if (responseErrors.length > 0) {\n        throw new Error(GQL_API_ERROR, {\n            cause: {\n                graphQLErrors: responseErrors,\n            },\n        });\n    }\n    if (Object.keys(combinedData).length === 0) {\n        throw new Error(NO_DATA_OR_ERRORS_ERROR);\n    }\n}\nfunction createMultipartResponseAsyncInterator(response, responseContentType) {\n    const boundaryHeader = (responseContentType ?? '').match(BOUNDARY_HEADER_REGEX);\n    const boundary = `--${boundaryHeader ? boundaryHeader[1] : '-'}`;\n    if (!response.body?.getReader &&\n        !response.body[Symbol.asyncIterator]) {\n        throw new Error('API multipart response did not return an iterable body', {\n            cause: response,\n        });\n    }\n    const streamBodyIterator = getStreamBodyIterator(response);\n    let combinedData = {};\n    let responseExtensions;\n    return {\n        async *[Symbol.asyncIterator]() {\n            try {\n                let streamHasNext = true;\n                for await (const chunkBodies of readStreamChunk(streamBodyIterator, boundary)) {\n                    const responseData = getResponseDataFromChunkBodies(chunkBodies);\n                    responseExtensions =\n                        responseData.find((datum) => datum.extensions)?.extensions ??\n                            responseExtensions;\n                    const responseErrors = combineErrors(responseData);\n                    combinedData = buildCombinedDataObject([\n                        combinedData,\n                        ...responseData.map(({ data }) => data),\n                    ]);\n                    streamHasNext = responseData.slice(-1)[0].hasNext;\n                    validateResponseData(responseErrors, combinedData);\n                    yield {\n                        ...getKeyValueIfValid('data', combinedData),\n                        ...getKeyValueIfValid('extensions', responseExtensions),\n                        hasNext: streamHasNext,\n                    };\n                }\n                if (streamHasNext) {\n                    throw new Error(`Response stream terminated unexpectedly`);\n                }\n            }\n            catch (error) {\n                const cause = getErrorCause(error);\n                yield {\n                    ...getKeyValueIfValid('data', combinedData),\n                    ...getKeyValueIfValid('extensions', responseExtensions),\n                    errors: {\n                        message: formatErrorMessage(getErrorMessage(error)),\n                        networkStatusCode: response.status,\n                        ...getKeyValueIfValid('graphQLErrors', cause?.graphQLErrors),\n                        response,\n                    },\n                    hasNext: false,\n                };\n            }\n        },\n    };\n}\nfunction generateRequestStream(fetch) {\n    return async (...props) => {\n        if (!DEFER_OPERATION_REGEX.test(props[0])) {\n            throw new Error(formatErrorMessage('This operation does not result in a streamable response - use request() instead.'));\n        }\n        try {\n            const response = await fetch(...props);\n            const { statusText } = response;\n            if (!response.ok) {\n                throw new Error(statusText, { cause: response });\n            }\n            const responseContentType = response.headers.get('content-type') || '';\n            switch (true) {\n                case responseContentType.includes(CONTENT_TYPES.json):\n                    return createJsonResponseAsyncIterator(response);\n                case responseContentType.includes(CONTENT_TYPES.multipart):\n                    return createMultipartResponseAsyncInterator(response, responseContentType);\n                default:\n                    throw new Error(`${UNEXPECTED_CONTENT_TYPE_ERROR} ${responseContentType}`, { cause: response });\n            }\n        }\n        catch (error) {\n            return {\n                async *[Symbol.asyncIterator]() {\n                    const response = getErrorCause(error);\n                    yield {\n                        errors: {\n                            message: formatErrorMessage(getErrorMessage(error)),\n                            ...getKeyValueIfValid('networkStatusCode', response?.status),\n                            ...getKeyValueIfValid('response', response),\n                        },\n                        hasNext: false,\n                    };\n                },\n            };\n        }\n    };\n}\n\nexport { createGraphQLClient, generateClientLogger };\n//# sourceMappingURL=graphql-client.mjs.map\n","function validateDomainAndGetStoreUrl({ client, storeDomain, }) {\n    try {\n        if (!storeDomain || typeof storeDomain !== 'string') {\n            throw new Error();\n        }\n        const trimmedDomain = storeDomain.trim();\n        const protocolUrl = trimmedDomain.match(/^https?:/)\n            ? trimmedDomain\n            : `https://${trimmedDomain}`;\n        const url = new URL(protocolUrl);\n        url.protocol = 'https';\n        return url.origin;\n    }\n    catch (_error) {\n        throw new Error(`${client}: a valid store domain (\"${storeDomain}\") must be provided`);\n    }\n}\nfunction validateApiVersion({ client, currentSupportedApiVersions, apiVersion, logger, }) {\n    const versionError = `${client}: the provided apiVersion (\"${apiVersion}\")`;\n    const supportedVersion = `Currently supported API versions: ${currentSupportedApiVersions.join(', ')}`;\n    if (!apiVersion || typeof apiVersion !== 'string') {\n        throw new Error(`${versionError} is invalid. ${supportedVersion}`);\n    }\n    const trimmedApiVersion = apiVersion.trim();\n    if (!currentSupportedApiVersions.includes(trimmedApiVersion)) {\n        if (logger) {\n            logger({\n                type: 'Unsupported_Api_Version',\n                content: {\n                    apiVersion,\n                    supportedApiVersions: currentSupportedApiVersions,\n                },\n            });\n        }\n        else {\n            console.warn(`${versionError} is likely deprecated or not supported. ${supportedVersion}`);\n        }\n    }\n}\n\nexport { validateApiVersion, validateDomainAndGetStoreUrl };\n//# sourceMappingURL=validations.mjs.map\n","function getQuarterMonth(quarter) {\n    const month = quarter * 3 - 2;\n    return month === 10 ? month : `0${month}`;\n}\nfunction getPrevousVersion(year, quarter, nQuarter) {\n    const versionQuarter = quarter - nQuarter;\n    if (versionQuarter <= 0) {\n        return `${year - 1}-${getQuarterMonth(versionQuarter + 4)}`;\n    }\n    return `${year}-${getQuarterMonth(versionQuarter)}`;\n}\nfunction getCurrentApiVersion() {\n    const date = new Date();\n    const month = date.getUTCMonth();\n    const year = date.getUTCFullYear();\n    const quarter = Math.floor(month / 3 + 1);\n    return {\n        year,\n        quarter,\n        version: `${year}-${getQuarterMonth(quarter)}`,\n    };\n}\nfunction getCurrentSupportedApiVersions() {\n    const { year, quarter, version: currentVersion } = getCurrentApiVersion();\n    const nextVersion = quarter === 4\n        ? `${year + 1}-01`\n        : `${year}-${getQuarterMonth(quarter + 1)}`;\n    return [\n        getPrevousVersion(year, quarter, 3),\n        getPrevousVersion(year, quarter, 2),\n        getPrevousVersion(year, quarter, 1),\n        currentVersion,\n        nextVersion,\n        'unstable',\n    ];\n}\n\nexport { getCurrentApiVersion, getCurrentSupportedApiVersions };\n//# sourceMappingURL=api-versions.mjs.map\n","function generateGetHeaders(config) {\n    return (customHeaders) => {\n        return { ...(customHeaders ?? {}), ...config.headers };\n    };\n}\nfunction generateGetGQLClientParams({ getHeaders, getApiUrl }) {\n    return (operation, options) => {\n        const props = [operation];\n        if (options && Object.keys(options).length > 0) {\n            const { variables, apiVersion: propApiVersion, headers, retries } = options;\n            props.push({\n                ...(variables ? { variables } : {}),\n                ...(headers ? { headers: getHeaders(headers) } : {}),\n                ...(propApiVersion ? { url: getApiUrl(propApiVersion) } : {}),\n                ...(retries ? { retries } : {}),\n            });\n        }\n        return props;\n    };\n}\n\nexport { generateGetGQLClientParams, generateGetHeaders };\n//# sourceMappingURL=utilities.mjs.map\n",null,null,null],"names":["CLIENT","SDK_VARIANT_HEADER","SDK_VERSION_HEADER","DEFAULT_SDK_VARIANT","DEFAULT_CLIENT_VERSION"],"mappings":"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"}