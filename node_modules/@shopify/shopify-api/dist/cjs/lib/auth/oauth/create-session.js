'use strict';

var uuid = require('uuid');
var session = require('../../session/session.js');
var index = require('../../logger/index.js');
var sessionUtils = require('../../session/session-utils.js');

function createSession({ config, accessTokenResponse, shop, state, }) {
    const associatedUser = accessTokenResponse
        .associated_user;
    const isOnline = Boolean(associatedUser);
    index.logger(config).info('Creating new session', { shop, isOnline });
    if (isOnline) {
        let sessionId;
        const responseBody = accessTokenResponse;
        const { access_token, scope, ...rest } = responseBody;
        const sessionExpiration = new Date(Date.now() + responseBody.expires_in * 1000);
        if (config.isEmbeddedApp) {
            sessionId = sessionUtils.getJwtSessionId(config)(shop, `${rest.associated_user.id}`);
        }
        else {
            sessionId = uuid.v4();
        }
        return new session.Session({
            id: sessionId,
            shop,
            state,
            isOnline,
            accessToken: access_token,
            scope,
            expires: sessionExpiration,
            onlineAccessInfo: rest,
        });
    }
    else {
        return new session.Session({
            id: sessionUtils.getOfflineId(config)(shop),
            shop,
            state,
            isOnline,
            accessToken: accessTokenResponse.access_token,
            scope: accessTokenResponse.scope,
        });
    }
}

exports.createSession = createSession;
//# sourceMappingURL=create-session.js.map
